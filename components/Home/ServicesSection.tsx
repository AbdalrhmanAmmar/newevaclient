
// @ts-nocheck

"use client"

import { Button } from '@/components/ui/button';
import { useState, useEffect } from 'react';
import { ArrowLeft } from 'lucide-react';
import Link from 'next/link';
import ServiceOpenModal from '../service/ServiceOpenModal';

const ServicesShowcase = () => {
  const [isOpen, setIsOpen] = useState<boolean>(false);
  const [selectedService, setSelectedService] = useState<string>("");

  const handleOpen = (serviceTitle: string) => {
    setSelectedService(serviceTitle);
    setIsOpen(true);
  };

  const closeModal = () => {
    setIsOpen(false);
    setSelectedService("");
  };

  const allServices = [
    { 
      icon: '๐', 
      title: "ุชูุฑูุฑ ููู ููุฑู", 
      description: "ุชูุฑูุฑ ููู ุดุงูู ูุชู ุฅุนุฏุงุฏู ููุฑุงู ูุน ุชูุตูุงุช ููุฑูุฉ ูุชุญุณูู ุงูุณูุงูุฉ ูู ุงูุญุฑุงุฆู",
      features: [
        "ุชูููู ููุฑู ูููุฎุงุทุฑ",
        "ุชูุตูุงุช ููุฑูุฉ ููุชุญุณููุงุช",
        "ูุฎุทุทุงุช ุงูุณูุงูุฉ ุงูุฃูููุฉ",
        "ุชูุฑูุฑ ูุนุชูุฏ ุฎูุงู 24 ุณุงุนุฉ"
      ]
    },
    { 
      icon: '๐', 
      title: "ุชูุฑูุฑ ููู ุบูุฑ ููุฑู", 
      description: "ุชูุฑูุฑ ููุตู ูุน ุชุญููู ุดุงูู ูุงุญุชูุงุฌุงุช ุงูุณูุงูุฉ ูู ุงูุญุฑุงุฆู ูู ุงูููุดุฃุฉ",
      features: [
        "ุฏุฑุงุณุฉ ูุชุนููุฉ ูููุฎุงุทุฑ",
        "ุฎุทุท ุณูุงูุฉ ุทูููุฉ ุงูุฃุฌู",
        "ุชุญููู ุงูุชูููุฉ ูุงูุนุงุฆุฏ",
        "ุชูุฑูุฑ ููุตู ุฎูุงู 3 ุฃูุงู ุนูู"
      ]
    },
    { 
      icon: '๐', 
      title: "ุดูุงุฏุฉ ุชุฑููุจ ุฃุฏูุงุช ุงูุณูุงูุฉ", 
      description: "ุฅุตุฏุงุฑ ุดูุงุฏุงุช ูุนุชูุฏุฉ ูุชุฑููุจ ุฃูุธูุฉ ุงูุณูุงูุฉ ูููุงูุญุฉ ุงูุญุฑูู ุญุณุจ ุงููุนุงููุฑ",
      features: [
        "ูุญุต ุดุงูู ููุฃุฏูุงุช ุงููุซุจุชุฉ",
        "ุดูุงุฏุฉ ูุนุชูุฏุฉ ูู ุงูุฏูุงุน ุงููุฏูู",
        "ุชูุซูู ูุงูุฉ ุงูุฃูุธูุฉ",
        "ูุชุงุจุนุฉ ุฏูุฑูุฉ ููุตูุงูุฉ"
      ]
    },
    { 
      icon: '๐', 
      title: "ุนูุฏ ุงูุตูุงูุฉ", 
      description: "ุนููุฏ ุตูุงูุฉ ุฏูุฑูุฉ ุดุงููุฉ ูุฃูุธูุฉ ุงูุณูุงูุฉ ูุงูุญูุงูุฉ ูู ุงูุญุฑุงุฆู",
      features: [
        "ูุญูุตุงุช ุฏูุฑูุฉ ุดูุฑูุฉ/ุณูููุฉ",
        "ุตูุงูุฉ ููุงุฆูุฉ ููุฃูุธูุฉ",
        "ุชูุฑูุฑ ููุตู ุจุนุฏ ูู ุฒูุงุฑุฉ",
        "ุงุณุชุฌุงุจุฉ ุณุฑูุนุฉ ููุทูุงุฑุฆ"
      ]
    },
    { 
      icon: '๐๏ธ', 
      title: "ูุฎุทุท ููุฏุณู", 
      description: "ุชุตููู ูุฎุทุทุงุช ููุฏุณูุฉ ูุชูุงููุฉ ูุฃูุธูุฉ ุงูุณูุงูุฉ ูู ุงูุญุฑุงุฆู",
      features: [
        "ุชุตููู ููู ูุนุงููุฑ ุงูุฏูุงุน ุงููุฏูู",
        "ุฎุฑุงุฆุท ุชูุฒูุน ุฃูุธูุฉ ุงูุฅูุฐุงุฑ",
        "ูุฎุทุทุงุช ููุงูุน ุทูุงูุงุช ุงูุญุฑูู",
        "ุชูุฌููุงุช ููุฏุณูุฉ ููุณูุงูุฉ"
      ]
    },
    { 
      icon: '๐ก๏ธ', 
      title: "ูุฎุทุท ุณูุงูุฉ", 
      description: "ุฅุนุฏุงุฏ ุฎุทุท ุณูุงูุฉ ูุชูุงููุฉ ููููุดุขุช ููู ุฃุนูู ุงููุนุงููุฑ",
      features: [
        "ุชุญุฏูุฏ ูุฎุงุฑุฌ ุงูุทูุงุฑุฆ",
        "ุชุฎุทูุท ูุณุงุฑุงุช ุงูุฅุฎูุงุก",
        "ุชุญุฏูุฏ ููุงุท ุงูุชุฌูุน ุงูุขููุฉ",
        "ุฅุฑุดุงุฏุงุช ุงูุณูุงูุฉ ููููุธููู"
      ]
    },
    { 
      icon: '๐ญ', 
      title: "ุชูุฑูุฏ ูุชุฑููุจ ุฃูุธูุฉ ุงูุณูุงูุฉ", 
      description: "ุญููู ูุชูุงููุฉ ูููุดุงุฑูุน ุงูุญููููุฉ ูุงูุฎุงุตุฉ",
      features: [
        "ุฃูุธูุฉ ุฅูุฐุงุฑ ุงูุญุฑูู ุงูุขููุฉ",
        "ุฃูุธูุฉ ุฅุทูุงุก ูุชูุงููุฉ",
        "ุชูุฑูุฏ ุทูุงูุงุช ุงูุญุฑูู",
        "ุชุฑููุจ ุฃูุธูุฉ ุงูุฅุฎูุงุก ุงูุฐููุฉ"
      ]
    },
    { 
      icon: '๐', 
      title: "ุฅุนุงุฏุฉ ุชุฃููู ุงูุฃูุธูุฉ", 
      description: "ุชุฑููุฉ ูุชุญุฏูุซ ุฃูุธูุฉ ุงูุณูุงูุฉ ุงููุฏููุฉ ูููุงูุจุฉ ุงููุนุงููุฑ ุงูุญุฏูุซุฉ",
      features: [
        "ุชูููู ุญุงูุฉ ุงูุฃูุธูุฉ ุงูุญุงููุฉ",
        "ุงูุชุฑุงุญุงุช ุงูุชุญุฏูุซ ูุงูุชุญุณูู",
        "ุงุณุชุจุฏุงู ุงููุนุฏุงุช ุงููุฏููุฉ",
        "ุชุญุณูู ููุงุกุฉ ุงูุฃูุธูุฉ"
      ]
    }
  ];

  const [randomServices, setRandomServices] = useState<typeof allServices>([]);

  useEffect(() => {
    // Get 3 random services on component mount
    const shuffled = [...allServices].sort(() => 0.5 - Math.random());
    setRandomServices(shuffled.slice(0, 3));
  }, []);

  return (
    <section className="py-16 md:py-24 bg-gradient-to-b from-background to-primary/5">
      <div className="container mx-auto px-4">
        <div className="text-center mb-16">
          <h2 className="text-3xl sm:text-4xl md:text-5xl font-bold mb-4">
            <span className="text-gradient">ุฎุฏูุงุชูุง ูู ุงูุณูุงูุฉ ูู ุงูุญุฑุงุฆู</span>
          </h2>
          <p className="text-lg md:text-xl text-muted-foreground max-w-3xl mx-auto">
            ุญููู ูุชูุงููุฉ ูุตููุฉ ุฎุตูุตุงู ูุถูุงู ุฃุนูู ูุนุงููุฑ ุงูุฃูุงู
          </p>
        </div>

        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-12">
          {randomServices.map((service, index) => (
            <div 
              key={index}
              className="bg-background rounded-2xl shadow-lg overflow-hidden border border-border/50 hover:border-primary/50 transition-all duration-300 group"
            >
              <div className="p-6 h-full flex flex-col">
                <div className="flex items-start mb-4">
                  <span className="text-3xl mr-3 bg-primary/10 p-3 rounded-lg group-hover:bg-primary/20 transition-colors">
                    {service.icon}
                  </span>
                  <h3 className="text-xl font-bold text-foreground mt-2">
                    {service.title}
                  </h3>
                </div>
                
                <p className="text-muted-foreground mb-4 flex-grow">
                  {service.description}
                </p>
                
                <ul className="space-y-2 mb-6">
                  {service.features.map((feature, i) => (
                    <li key={i} className="flex items-start">
                      <span className="text-primary mr-2">โ</span>
                      <span className="text-sm">{feature}</span>
                    </li>
                  ))}
                </ul>
                
                <Button 
                  onClick={() => handleOpen(service.title)}
                  variant="outline" 
                  className="w-full mt-auto group-hover:bg-primary group-hover:text-white transition-colors"
                >
                  ุทูุจ ุงูุฎุฏูู
                  <ArrowLeft className="w-4 h-4 mr-2" />
                </Button>
              </div>
            </div>
          ))}
        </div>

        <div className="text-center">
          <Button 
            onClick={() => handleOpen("ุฌููุน ุงูุฎุฏูุงุช")}
            size="lg" 
            className="px-8"
          >
            ุงูุชุดู ุฌููุน ุฎุฏูุงุชูุง
            <ArrowLeft className="w-5 h-5 mr-2" />
          </Button>
        </div>
      </div>

      <ServiceOpenModal 
        isOpen={isOpen} 
        onClose={closeModal} 
        serviceTitle={selectedService} 
      />
    </section>
  );
};

export default ServicesShowcase;